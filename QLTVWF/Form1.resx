<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MTA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>